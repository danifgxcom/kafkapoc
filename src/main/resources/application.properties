# Application Configuration
spring.application.name=kafkapoc

# Server Configuration
server.port=8080

# Logging Configuration
logging.level.com.danifgx.kafkapoc=INFO
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=INFO

# Core Kafka Configuration
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.danifgx.kafkapoc.model
spring.kafka.consumer.properties.spring.json.value.default.type=com.danifgx.kafkapoc.model.Message
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.listener.ack-mode=RECORD
spring.kafka.listener.type=SINGLE
spring.kafka.producer.acks=1
spring.kafka.producer.retries=3
spring.kafka.consumer.properties.allow.auto.create.topics=true
# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# Spring Cloud Stream Binder Configuration
spring.cloud.stream.default-binder=kafka
spring.cloud.stream.default.content-type=application/json
spring.cloud.stream.binders.kafka.type=kafka
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.brokers=localhost:29092
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.auto-add-partitions=true
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.min-partition-count=1
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.required-acks=1
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.producer-properties.retries=3
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.consumer-properties.allow.auto.create.topics=true
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.consumer-properties.missing.topics.fatal=false
spring.cloud.stream.kafka.binder.serdeError=logAndContinue
spring.cloud.stream.kafka.binder.messageConverterBeanName=stringJsonMessageConverter
spring.cloud.stream.kafka.binder.configuration.max.block.ms=5000
spring.cloud.stream.kafka.binder.configuration.request.timeout.ms=5000
spring.cloud.stream.kafka.binder.configuration.delivery.timeout.ms=10000
spring.cloud.stream.kafka.binder.configuration.reconnect.backoff.ms=1000
spring.cloud.stream.kafka.binder.configuration.reconnect.backoff.max.ms=5000
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.producer-properties.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.producer-properties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.consumer-properties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.consumer-properties.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.consumer-properties.spring.json.trusted.packages=com.danifgx.kafkapoc.model
spring.cloud.stream.binders.kafka.environment.spring.cloud.stream.kafka.binder.consumer-properties.spring.json.value.default.type=com.danifgx.kafkapoc.model.Message
spring.cloud.stream.binders.rabbit.type=rabbit
spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.host=localhost
spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.username=guest
spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.password=guest
# Spring Cloud Stream Kafka Bindings
spring.cloud.stream.bindings.process-in-0.destination=cloud-stream-topic
spring.cloud.stream.bindings.process-out-0.destination=cloud-stream-topic-processed
spring.cloud.stream.bindings.process-in-0.binder=kafka
spring.cloud.stream.bindings.process-out-0.binder=kafka
spring.cloud.stream.bindings.process-in-0.content-type=application/json
spring.cloud.stream.bindings.process-out-0.content-type=application/json
# Spring Cloud Stream RabbitMQ Bindings
spring.cloud.stream.bindings.processRabbit-in-0.destination=rabbit-input-queue
spring.cloud.stream.bindings.processRabbit-out-0.destination=rabbit-output-queue
spring.cloud.stream.bindings.processRabbit-in-0.binder=rabbit
spring.cloud.stream.bindings.processRabbit-out-0.binder=rabbit
spring.cloud.stream.bindings.processRabbit-in-0.content-type=application/json
spring.cloud.stream.bindings.processRabbit-out-0.content-type=application/json

# Configuracion adicional para RabbitMQ
spring.cloud.stream.rabbit.bindings.processRabbit-in-0.consumer.declare-exchange=true
spring.cloud.stream.rabbit.bindings.processRabbit-in-0.consumer.auto-bind-dlq=true
spring.cloud.stream.rabbit.default.consumer.auto-declare=true
spring.cloud.stream.rabbit.bindings.processRabbit-in-0.consumer.durable=true
spring.cloud.stream.rabbit.bindings.processRabbit-out-0.producer.durable=true
spring.cloud.stream.rabbit.bindings.processRabbit-in-0.consumer.queue-name-group=true
spring.cloud.stream.rabbit.bindings.processRabbit-out-0.producer.exchange-durable=true
spring.cloud.stream.bindings.processRabbit-in-0.group=rabbit-consumer-group
spring.cloud.stream.bindings.processRabbit-out-0.producer.required-groups=rabbit-output-group
spring.cloud.function.definition=processRabbit

# Kafka Streams Configuration
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.processing.guarantee=at_least_once
spring.cloud.stream.kafka.streams.binder.configuration.replication.factor=1
spring.cloud.stream.kafka.streams.binder.brokers=localhost:29092
spring.cloud.stream.kafka.streams.binder.auto-create-topics=true
spring.cloud.stream.kafka.streams.binder.min-partition-count=1
spring.cloud.stream.kafka.streams.binder.required-acks=1
spring.cloud.stream.kafka.streams.binder.producer-properties.retries=3
spring.cloud.stream.kafka.streams.binder.consumer-properties.allow.auto.create.topics=true
spring.cloud.stream.kafka.streams.binder.consumer-properties.missing.topics.fatal=false
# Kafka Streams Bindings
spring.cloud.stream.bindings.kstream-in-0.destination=stream-input
spring.cloud.stream.bindings.kstream-out-0.destination=stream-output
spring.cloud.stream.bindings.kstream-in-0.binder=kafka
spring.cloud.stream.bindings.kstream-out-0.binder=kafka
spring.cloud.stream.bindings.kstream-in-0.content-type=application/json
spring.cloud.stream.bindings.kstream-out-0.content-type=application/json
